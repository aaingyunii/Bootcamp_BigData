{
  "paragraphs": [
    {
      "text": "%sh\n# pip uninstall pandas -y",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:16+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373659_1642867205",
      "id": "paragraph_1697443930893_1695177851",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:5451",
      "dateFinished": "2023-10-17T01:20:16+0900",
      "dateStarted": "2023-10-17T01:20:16+0900"
    },
    {
      "text": "%sh\n# pip install -U pandas==1.5.3",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:16+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_1026927011",
      "id": "paragraph_1697443945873_1553959591",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5452",
      "dateFinished": "2023-10-17T01:20:16+0900",
      "dateStarted": "2023-10-17T01:20:16+0900"
    },
    {
      "text": "%sh\n# pip install ksql",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:16+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_1516706080",
      "id": "paragraph_1697443962341_770626783",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5453",
      "dateFinished": "2023-10-17T01:20:16+0900",
      "dateStarted": "2023-10-17T01:20:16+0900"
    },
    {
      "text": "%md\n\n- 기존의 pandas 버전과 ksql이 충돌나는 것으로 보여\n- pandas 다른 버전을 다운받아서 진행",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:17+0900",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<ul>\n<li>기존의 pandas 버전과 ksql이 충돌나는 것으로 보여</li>\n<li>pandas 다른 버전을 다운받아서 진행</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_775460891",
      "id": "paragraph_1697443980649_821718892",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5454",
      "dateFinished": "2023-10-17T01:20:20+0900",
      "dateStarted": "2023-10-17T01:20:17+0900"
    },
    {
      "text": "%spark.pyspark\n\nfrom ksql import KSQLAPI\nimport pandas as pd\nimport time\nimport datetime\nimport numpy as np\nfrom pyspark.ml.regression import RandomForestRegressionModel\nfrom pyspark.ml.feature import VectorAssembler\nimport ast",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:20+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_1088124174",
      "id": "paragraph_1697444022823_747787656",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5455",
      "dateFinished": "2023-10-17T01:20:20+0900",
      "dateStarted": "2023-10-17T01:20:20+0900",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "text": "%spark.pyspark\nclient = KSQLAPI(\"http://localhost:8089\", timeout=None)",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:20+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_71881874",
      "id": "paragraph_1697444141016_1340607874",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5456",
      "dateFinished": "2023-10-17T01:20:20+0900",
      "dateStarted": "2023-10-17T01:20:20+0900"
    },
    {
      "text": "%spark.pyspark\n\n# 하둡에 저장된 모델 읽어서 저장\nload_rf = RandomForestRegressionModel.load(\"/spark_rf_model/\")",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:20+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=213",
              "$$hashKey": "object:112823"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=214",
              "$$hashKey": "object:112824"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=215",
              "$$hashKey": "object:112825"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=216",
              "$$hashKey": "object:112826"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=217",
              "$$hashKey": "object:112827"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373660_2068638443",
      "id": "paragraph_1697444347737_1606667353",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5457",
      "dateFinished": "2023-10-17T01:20:22+0900",
      "dateStarted": "2023-10-17T01:20:20+0900",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "text": "%spark.pyspark\nload_rf",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:22+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471373661_2052601453",
      "id": "paragraph_1697444347648_50065743",
      "dateCreated": "2023-10-17T00:49:33+0900",
      "status": "FINISHED",
      "$$hashKey": "object:5458",
      "dateFinished": "2023-10-17T01:20:22+0900",
      "dateStarted": "2023-10-17T01:20:22+0900",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "RandomForestRegressionModel: uid=RandomForestRegressor_6f7497467931, numTrees=100, numFeatures=7\n"
          }
        ]
      }
    },
    {
      "text": "%spark.pyspark\nfeature_name_list = [\n                    'now_latitude', 'now_longitude', 'now_arrive_time',\n                    'distance','next_latitude','next_longitude','weekday'\n                    ]",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:22+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471586286_455347845",
      "id": "paragraph_1697471586286_455347845",
      "dateCreated": "2023-10-17T00:53:06+0900",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:6248",
      "dateFinished": "2023-10-17T01:20:22+0900",
      "dateStarted": "2023-10-17T01:20:22+0900",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "text": "%spark.pyspark\nfeature_name_list",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:22+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471772315_638058972",
      "id": "paragraph_1697471772315_638058972",
      "dateCreated": "2023-10-17T00:56:12+0900",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:6458",
      "dateFinished": "2023-10-17T01:20:22+0900",
      "dateStarted": "2023-10-17T01:20:22+0900",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['now_latitude', 'now_longitude', 'now_arrive_time', 'distance', 'next_latitude', 'next_longitude', 'weekday']\n"
          }
        ]
      }
    },
    {
      "text": "%spark.pyspark\n# 실시간 버스 위치가 저장된 테이블의 모든 레코드 조회하는 객체 생성\n\nget_change_table = client.query(\"\"\"SELECT * FROM car_location_topic EMIT CHANGES;\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:22+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471778543_1285165790",
      "id": "paragraph_1697471778543_1285165790",
      "dateCreated": "2023-10-17T00:56:18+0900",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:6527",
      "dateFinished": "2023-10-17T01:20:22+0900",
      "dateStarted": "2023-10-17T01:20:22+0900",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "text": "%spark.pyspark\n# car_location_topic에 추가된 데이터가 있을 때까지 대기하고 있다\n## 추가된 데이터가 있으면 반복문 실행\n\nfor i in get_change_table:\n    print(f\"수정된 테이블 조회 : {i}\")\n    \n    if \"row\" in i:\n        location = ast.literal_eval(i)[0][\"row\"][\"columns\"]\n        print(f\"위치 : {location}\")\n        \n        id = location[0]\n        date = location[1]\n        route_id = location[2]\n        vh_id = location[3]\n        route_nm = location[4]\n        now_latitude = location[5]\n        now_longitude = location[6]\n        now_station = location[7]\n        now_arrive_time = location[8]\n        distance = location[9]\n        next_station = location[10]\n        next_latitude = location[11]\n        next_longitude = location[12]\n        weekday = location[13]\n        \n        # 예측을 위해 버스 위치 정보를 Pandas DataFrame 으로 생성\n        df_location = pd.DataFrame({\n            \"now_latitude\" : [now_latitude],\n            \"now_longitude\" : [now_longitude],\n            \"now_arrive_time\" : [now_arrive_time],\n            \"distance\" : [distance],\n            \"next_latitude\" : [next_latitude],\n            \"next_longitude\" : [next_longitude],\n            \"weekday\" : [weekday]\n        })\n        \n        # Pandas DataFrame인 df_location을 Spark DataFrame 으로 변환\n        # Spark RandomForest 모델에서 예측을 위해\n        df_spark = spark.createDataFrame(df_location)\n        \n        assembler = VectorAssembler(inputCols=feature_name_list, outputCol=\"features\")\n        \n        assembler_df = assembler.transform(df_spark)\n        \n        prediction = load_rf.transform(assembler_df)\n        \n        arrive_time = prediction.toPandas().loc[0,\"prediction\"]\n        print(\"#\"*100)\n\n        # 학습시 예측을 로그 값으로 예측하기 때문에 np.exp(로그값) => 원래 값으로 변환 출력\n        print(f\"버스로 전송할 도착 예정 시간 : {np.exp(arrive_time)}\")\n        print(\"#\"*100)\n        \n        # 다음 정류장에 도착 예정 시간을 소수 3번째 자리 반올림\n        next_arrive_time = round(np.exp(arrive_time),3)\n        \n        insert_query = f\"\"\"INSERT INTO car_arrive_topic (\n                id\n                ,route_id\n                ,vh_id\n                ,route_nm\n                ,now_latitude\n                ,now_longitude\n                ,now_station\n                ,now_arrive_time\n                ,distance\n                ,next_station\n                ,next_latitude\n                ,next_longitude\n                ,weekday\n                ,date\n                ,next_arrive_time\n                ) VALUES ({id},'{route_id}','{vh_id}'\n                        ,'{route_nm}',{now_latitude}\n                        ,{now_longitude},'{now_station}'\n                        ,{now_arrive_time},{distance}\n                        ,'{next_station}',{next_latitude}\n                        ,{next_longitude},{weekday}\n                        ,'{date}',{next_arrive_time}\n                        );\"\"\"\n        print(f\"insert query :\\n{insert_query}\")\n\n        try:\n            client.ksql(insert_query) # KSQLDB에 현재 위치 추가\n        except Exception as e:\n            print(f\"Exception : \\n{e}\")\n            \n    print(\"=\"*100)",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:20:22+0900",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=218",
              "$$hashKey": "object:112959"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=219",
              "$$hashKey": "object:112960"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=220",
              "$$hashKey": "object:112961"
            },
            {
              "jobUrl": "http://localhost:38395/jobs/job?id=221",
              "$$hashKey": "object:112962"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697471869483_156607864",
      "id": "paragraph_1697471869483_156607864",
      "dateCreated": "2023-10-17T00:57:49+0900",
      "status": "ABORT",
      "focus": true,
      "$$hashKey": "object:6662",
      "dateFinished": "2023-10-17T01:22:59+0900",
      "dateStarted": "2023-10-17T01:20:22+0900",
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "수정된 테이블 조회 : [{\"header\":{\"queryId\":\"transient_CAR_LOCATION_TOPIC_3504778390099935180\",\"schema\":\"`ID` BIGINT, `DATE` DATE, `ROUTE_ID` STRING, `VH_ID` STRING, `ROUTE_NM` STRING, `NOW_LATITUDE` DECIMAL(10, 6), `NOW_LONGITUDE` DECIMAL(10, 6), `NOW_STATION` STRING, `NOW_ARRIVE_TIME` DECIMAL(2, 0), `DISTANCE` DECIMAL(10, 1), `NEXT_STATION` STRING, `NEXT_LATITUDE` DECIMAL(10, 6), `NEXT_LONGITUDE` DECIMAL(10, 6), `WEEKDAY` DECIMAL(1, 0)\"}},\n\n====================================================================================================\n수정된 테이블 조회 : {\"row\":{\"columns\":[1697473227,\"2023-10-17\",\"405136001\",\"7997025\",\"360-1\",33.485662,126.494923,\"도호동\",1,374.0,\"은남동\",33.485822,126.490897,1]}},\n\n위치 : [1697473227, '2023-10-17', '405136001', '7997025', '360-1', 33.485662, 126.494923, '도호동', 1, 374.0, '은남동', 33.485822, 126.490897, 1]\n/root/spark/python/pyspark/sql/pandas/conversion.py:371: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n  for column, series in pdf.iteritems():\n####################################################################################################\n버스로 전송할 도착 예정 시간 : 204.15284125745472\n####################################################################################################\ninsert query :\nINSERT INTO car_arrive_topic (\n                id\n                ,route_id\n                ,vh_id\n                ,route_nm\n                ,now_latitude\n                ,now_longitude\n                ,now_station\n                ,now_arrive_time\n                ,distance\n                ,next_station\n                ,next_latitude\n                ,next_longitude\n                ,weekday\n                ,date\n                ,next_arrive_time\n                ) VALUES (1697473227,'405136001','7997025'\n                        ,'360-1',33.485662\n                        ,126.494923,'도호동'\n                        ,1,374.0\n                        ,'은남동',33.485822\n                        ,126.490897,1\n                        ,'2023-10-17',204.153\n                        );\nException : \nlist index out of range\n====================================================================================================\n수정된 테이블 조회 : {\"row\":{\"columns\":[1697473257,\"2023-10-17\",\"405136001\",\"7997025\",\"360-1\",33.478867,126.483833,\"한라중학교/부영아파트\",1,417.0,\"대림2차아파트\",33.478850,126.488350,1]}},\n\n위치 : [1697473257, '2023-10-17', '405136001', '7997025', '360-1', 33.478867, 126.483833, '한라중학교/부영아파트', 1, 417.0, '대림2차아파트', 33.47885, 126.48835, 1]\n/root/spark/python/pyspark/sql/pandas/conversion.py:371: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n  for column, series in pdf.iteritems():\n####################################################################################################\n버스로 전송할 도착 예정 시간 : 208.21758959914342\n####################################################################################################\ninsert query :\nINSERT INTO car_arrive_topic (\n                id\n                ,route_id\n                ,vh_id\n                ,route_nm\n                ,now_latitude\n                ,now_longitude\n                ,now_station\n                ,now_arrive_time\n                ,distance\n                ,next_station\n                ,next_latitude\n                ,next_longitude\n                ,weekday\n                ,date\n                ,next_arrive_time\n                ) VALUES (1697473257,'405136001','7997025'\n                        ,'360-1',33.478867\n                        ,126.483833,'한라중학교/부영아파트'\n                        ,1,417.0\n                        ,'대림2차아파트',33.47885\n                        ,126.48835,1\n                        ,'2023-10-17',208.218\n                        );\nException : \nlist index out of range\n====================================================================================================\n수정된 테이블 조회 : {\"row\":{\"columns\":[1697473287,\"2023-10-17\",\"405136001\",\"7997025\",\"360-1\",33.478850,126.488350,\"대림2차아파트\",1,334.0,\"연동대림1차아파트\",33.480700,126.489933,1]}},\n\n위치 : [1697473287, '2023-10-17', '405136001', '7997025', '360-1', 33.47885, 126.48835, '대림2차아파트', 1, 334.0, '연동대림1차아파트', 33.4807, 126.489933, 1]\n/root/spark/python/pyspark/sql/pandas/conversion.py:371: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n  for column, series in pdf.iteritems():\n####################################################################################################\n버스로 전송할 도착 예정 시간 : 200.13310744447347\n####################################################################################################\ninsert query :\nINSERT INTO car_arrive_topic (\n                id\n                ,route_id\n                ,vh_id\n                ,route_nm\n                ,now_latitude\n                ,now_longitude\n                ,now_station\n                ,now_arrive_time\n                ,distance\n                ,next_station\n                ,next_latitude\n                ,next_longitude\n                ,weekday\n                ,date\n                ,next_arrive_time\n                ) VALUES (1697473287,'405136001','7997025'\n                        ,'360-1',33.47885\n                        ,126.48835,'대림2차아파트'\n                        ,1,334.0\n                        ,'연동대림1차아파트',33.4807\n                        ,126.489933,1\n                        ,'2023-10-17',200.133\n                        );\nException : \nlist index out of range\n====================================================================================================\n수정된 테이블 조회 : {\"row\":{\"columns\":[1697473317,\"2023-10-17\",\"405136001\",\"7997025\",\"360-1\",33.480700,126.489933,\"연동대림1차아파트\",1,550.0,\"케이티앤지\",33.482077,126.485355,1]}},\n\n위치 : [1697473317, '2023-10-17', '405136001', '7997025', '360-1', 33.4807, 126.489933, '연동대림1차아파트', 1, 550.0, '케이티앤지', 33.482077, 126.485355, 1]\n/root/spark/python/pyspark/sql/pandas/conversion.py:371: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n  for column, series in pdf.iteritems():\n####################################################################################################\n버스로 전송할 도착 예정 시간 : 199.07618331278283\n####################################################################################################\ninsert query :\nINSERT INTO car_arrive_topic (\n                id\n                ,route_id\n                ,vh_id\n                ,route_nm\n                ,now_latitude\n                ,now_longitude\n                ,now_station\n                ,now_arrive_time\n                ,distance\n                ,next_station\n                ,next_latitude\n                ,next_longitude\n                ,weekday\n                ,date\n                ,next_arrive_time\n                ) VALUES (1697473317,'405136001','7997025'\n                        ,'360-1',33.4807\n                        ,126.489933,'연동대림1차아파트'\n                        ,1,550.0\n                        ,'케이티앤지',33.482077\n                        ,126.485355,1\n                        ,'2023-10-17',199.076\n                        );\nException : \nlist index out of range\n====================================================================================================\n"
          },
          {
            "type": "TEXT",
            "data": "Fail to execute line 5: for i in get_change_table:\nTraceback (most recent call last):\n  File \"/tmp/hadoop-root/nm-local-dir/usercache/root/appcache/application_1697470582060_0001/container_1697470582060_0001_01_000001/tmp/python6265299247965434047/zeppelin_python.py\", line 167, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 5, in <module>\n  File \"/usr/local/lib/python3.9/dist-packages/ksql/client.py\", line 63, in query\n    yield from process_query_result(results, return_objects)\n  File \"/usr/local/lib/python3.9/dist-packages/ksql/utils.py\", line 100, in process_query_result\n    yield from results\n  File \"/usr/local/lib/python3.9/dist-packages/ksql/api.py\", line 118, in query\n    for chunk in streaming_response:\n  File \"/usr/lib/python3.9/http/client.py\", line 680, in readline\n    return super().readline(limit)\n  File \"/usr/lib/python3.9/http/client.py\", line 672, in peek\n    return self._peek_chunked(n)\n  File \"/usr/lib/python3.9/http/client.py\", line 708, in _peek_chunked\n    chunk_left = self._get_chunk_left()\n  File \"/usr/lib/python3.9/http/client.py\", line 560, in _get_chunk_left\n    chunk_left = self._read_next_chunk_size()\n  File \"/usr/lib/python3.9/http/client.py\", line 520, in _read_next_chunk_size\n    line = self.fp.readline(_MAXLINE + 1)\n  File \"/usr/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/root/spark/python/pyspark/context.py\", line 293, in signal_handler\n    raise KeyboardInterrupt()\nKeyboardInterrupt\n"
          }
        ]
      }
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2023-10-17T01:13:53+0900",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1697472833106_1833827348",
      "id": "paragraph_1697472833106_1833827348",
      "dateCreated": "2023-10-17T01:13:53+0900",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6731"
    }
  ],
  "name": "ai_spark_bus_arrive_prediction",
  "id": "2JCTXY35J",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/ai_spark_bus_arrive_prediction"
}